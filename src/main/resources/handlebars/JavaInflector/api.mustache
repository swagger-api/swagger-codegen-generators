package {{invokerPackage}};

import io.swagger.oas.inflector.models.RequestContext;
import io.swagger.oas.inflector.models.ResponseContext;
{{#jakarta}}
import jakarta.ws.rs.core.Response.Status;
{{/jakarta}}
{{^jakarta}}
import javax.ws.rs.core.Response.Status;
{{/jakarta}}

import org.glassfish.jersey.media.multipart.FormDataContentDisposition;
import java.io.File;
import java.util.List;

{{#hasModel}}import {{modelPackage}}.*;{{/hasModel}}

{{#imports}}import {{import}};
{{/imports}}

{{>generatedAnnotation}}
{{#operations}}
public class {{classname}}  {
  /** 
   * Uncomment and implement as you see fit.  These operations will map
   * Directly to operation calls from the routing logic.  Because the inflector
   * Code allows you to implement logic incrementally, they are disabled.
   **/

{{#operation}}
{{#contents}}
  /*
    public ResponseContext {{operationId}}(RequestContext request {{#parameters}}, {{>queryParams}}{{>pathParams}}{{>headerParams}}{{>bodyParams}}{{>formParams}}{{/parameters}}) {
        return new ResponseContext().status(Status.INTERNAL_SERVER_ERROR).entity( "Not implemented" );
    }
  */

{{/contents}}
{{/operation}}
}
{{/operations}}

