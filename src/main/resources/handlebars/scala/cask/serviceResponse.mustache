{{>licenseInfo}}

package {{apiPackage}}

enum ServiceResponse[+A]:
    case Ok[T](result: T) extends ServiceResponse[T]
    case Other(code: Int, description: Option[String]) extends ServiceResponse[Nothing]
    case NotFound extends ServiceResponse[Nothing]

object ServiceResponse {
  def apply[A](value: A) = Ok(value)
  def apply[A](code: Int, description: String = ""): ServiceResponse[A] = Other(code, Option(description.trim).filterNot(_.isEmpty))
  def notFound[A]: ServiceResponse[A] = NotFound
  def notImplemented[A]: ServiceResponse[A] = apply(500, "not implemented")
}
